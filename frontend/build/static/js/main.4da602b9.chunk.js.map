{"version":3,"sources":["components/Footer.js","constants/userConstants.js","components/Header.js","actions/userActions.js","screens/LandingPage/LandingPage.js","components/MainScreen.js","constants/notesConstants.js","actions/notesActions.js","components/Loading.js","components/ErrorMessage.js","screens/MyNotes/MyNotes.js","screens/SingleNote/SingleNote.js","screens/LoginScreen/LoginScreen.js","screens/RegisterScreen/RegisterScreen.js","screens/SingleNote/CreateNote.js","screens/ProfileScreen/ProfileScreen.js","App.js","reportWebVitals.js","store.js","reducers/notesReducers.js","reducers/userReducers.js","index.js"],"names":["Footer","style","width","position","bottom","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","Header","setSearch","dispatch","useDispatch","userInfo","useSelector","state","userLogin","useEffect","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Form","inline","FormControl","type","placeholder","onChange","e","target","value","Link","NavDropdown","title","name","Item","Divider","onClick","a","localStorage","removeItem","LandingPage","history","push","to","Button","size","MainScreen","children","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_LIST_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_CREATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","NOTES_UPDATE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_DELETE_FAIL","deleteNoteAction","getState","config","headers","Authorization","token","axios","delete","data","payload","message","response","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyNotes","search","noteList","loading","error","notes","noteDelete","loadingDelete","errorDelete","successDelete","success","successCreate","noteCreate","successUpdate","noteUpdate","get","console","log","marginLeft","marginBottom","filter","filteredNote","toLowerCase","includes","reverse","map","note","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","Text","eventKey","_id","window","confirm","Body","Badge","category","content","createdAt","substring","SingleNote","match","useState","setTitle","setContent","setCategory","date","setDate","params","updatedAt","fetching","onSubmit","preventDefault","put","updateNoteAction","Group","controlId","Label","Control","rows","LoginScreen","email","setEmail","password","setPassword","post","setItem","JSON","stringify","login","RegisterScreen","setName","pic","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","register","File","pics","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","label","custom","CreateNote","resetHandler","createNoteAction","Date","toLocaleDateString","ProfileScreen","location","confirmPassword","userUpdate","md","user","varient","src","alt","App","s","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4da602b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer\r\n      style={{\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n        bottom: 0,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; Note Keeper</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {} from \"react-router-dom\";\r\nimport { logout } from \"../actions/userActions\";\r\n\r\nfunction Header({ setSearch }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  useEffect(() => {}, [userInfo]);\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">Note Keeper</Navbar.Brand>\r\n\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"m-auto\">\r\n            {userInfo && (\r\n              <Form inline>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  placeholder=\"Search\"\r\n                  className=\"mr-sm-2\"\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                />\r\n              </Form>\r\n            )}\r\n          </Nav>\r\n          <Nav>\r\n            {userInfo ? (\r\n              <>\r\n                <Nav.Link href=\"/mynotes\">My Notes</Nav.Link>\r\n                <NavDropdown\r\n                  title={`${userInfo.name}`}\r\n                  id=\"collasible-nav-dropdown\"\r\n                >\r\n                  <NavDropdown.Item href=\"/profile\">\r\n                    {/* <img\r\n                      alt=\"\"\r\n                      src={`${userInfo.pic}`}\r\n                      width=\"25\"\r\n                      height=\"25\"\r\n                      style={{ marginRight: 10 }}\r\n                    /> */}\r\n                    My Profile\r\n                  </NavDropdown.Item>\r\n\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              </>\r\n            ) : (\r\n              <Nav.Link href=\"/login\">Login</Nav.Link>\r\n            )}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const register = (name, email, password, pic) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    // it should have register router as well\r\n    //like --> /api/user/register\r\n\r\n    //you could have used fetch as well instead of axios everywhere but axios is easy,quick and efficient\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, pic, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/users/profile\", user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\r\n\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Container, Row } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./LandingStyles.css\";\r\n\r\nfunction LandingPage({ history }) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/mynotes\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"intro-text\">\r\n            <div>\r\n              <h1 className=\"title\">Welcome to Note Keeper</h1>\r\n              <p className=\"subtitle\">One Safe place for all your goals.</p>\r\n            </div>\r\n            <div className=\"buttonContainer\">\r\n              <Link to=\"/login\">\r\n                <Button size=\"lg\" className=\"landingbutton\">\r\n                  Login\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  size=\"lg\"\r\n                  className=\"landingbutton\"\r\n                >\r\n                  Signup\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport \"./Screen.css\";\r\n\r\nfunction MainScreen({ children, title }) {\r\n  return (\r\n    <div className=\"mainback\">\r\n      <Container>\r\n        <Row>\r\n          <div className=\"page\">\r\n            {title && (\r\n              <>\r\n                <h1 className=\"heading\">{title}</h1>\r\n                <hr />\r\n              </>\r\n            )}\r\n            {children}\r\n          </div>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainScreen;\r\n","export const NOTES_LIST_REQUEST = \"NOTES_LIST_REQUEST\";\r\nexport const NOTES_LIST_SUCCESS = \"NOTES_LIST_SUCCESS\";\r\nexport const NOTES_LIST_FAIL = \"NOTES_LIST_FAIL\";\r\n\r\nexport const NOTES_CREATE_REQUEST = \"NOTES_CREATE_REQUEST\";\r\nexport const NOTES_CREATE_SUCCESS = \"NOTES_CREATE_SUCCESS\";\r\nexport const NOTES_CREATE_FAIL = \"NOTES_CREATE_FAIL\";\r\n\r\nexport const NOTES_UPDATE_REQUEST = \"NOTES_UPDATE_REQUEST\";\r\nexport const NOTES_UPDATE_SUCCESS = \"NOTES_UPDATE_SUCCESS\";\r\nexport const NOTES_UPDATE_FAIL = \"NOTES_UPDATE_FAIL\";\r\n\r\nexport const NOTES_DELETE_REQUEST = \"NOTES_DELETE_REQUEST\";\r\nexport const NOTES_DELETE_SUCCESS = \"NOTES_DELETE_SUCCESS\";\r\nexport const NOTES_DELETE_FAIL = \"NOTES_DELETE_FAIL\";\r\n","import {\r\n  NOTES_CREATE_FAIL,\r\n  NOTES_CREATE_REQUEST,\r\n  NOTES_CREATE_SUCCESS,\r\n  NOTES_DELETE_FAIL,\r\n  NOTES_DELETE_REQUEST,\r\n  NOTES_DELETE_SUCCESS,\r\n  NOTES_LIST_FAIL,\r\n  NOTES_LIST_REQUEST,\r\n  NOTES_LIST_SUCCESS,\r\n  NOTES_UPDATE_FAIL,\r\n  NOTES_UPDATE_REQUEST,\r\n  NOTES_UPDATE_SUCCESS,\r\n} from \"../constants/notesConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listNotes = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTES_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/notes`, config);\r\n\r\n    dispatch({\r\n      type: NOTES_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTES_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createNoteAction = (title, content, category) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTES_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/api/notes/create`,\r\n      { title, content, category },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: NOTES_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTES_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteNoteAction = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTES_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.delete(`/api/notes/${id}`, config);\r\n\r\n    dispatch({\r\n      type: NOTES_DELETE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTES_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateNoteAction = (id, title, content, category) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: NOTES_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/notes/${id}`,\r\n      { title, content, category },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: NOTES_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    dispatch({\r\n      type: NOTES_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nfunction Loading({ size = 100 }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <Spinner\r\n        style={{\r\n          width: size,\r\n          height: size,\r\n        }}\r\n        animation=\"border\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst ErrorMessage = ({ variant = \"info\", children }) => {\r\n  return (\r\n    <Alert variant={variant} style={{ fontSize: 20 }}>\r\n      <strong>{children}</strong>\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Accordion, Badge, Button, Card } from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteNoteAction, listNotes } from \"../../actions/notesActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nfunction MyNotes({ history, search }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const noteList = useSelector((state) => state.noteList);\r\n  const { loading, error, notes } = noteList;\r\n\r\n  // const filteredNotes = notes.filter((note) =>\r\n  //   note.title.toLowerCase().includes(search.toLowerCase())\r\n  // );\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = noteDelete;\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { success: successCreate } = noteCreate;\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { success: successUpdate } = noteUpdate;\r\n\r\n  useEffect(() => {\r\n    dispatch(listNotes());\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    successUpdate,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainScreen title={`Welcome Back ${userInfo && userInfo.name}..`}>\r\n      {console.log(notes)}\r\n      <Link to=\"/createnote\">\r\n        <Button style={{ marginLeft: 10, marginBottom: 6 }} size=\"lg\">\r\n          Create new Note\r\n        </Button>\r\n      </Link>\r\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n      {errorDelete && (\r\n        <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n      )}\r\n      {loading && <Loading />}\r\n      {loadingDelete && <Loading />}\r\n      {notes &&\r\n        notes\r\n          .filter((filteredNote) =>\r\n            filteredNote.title.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n          .reverse()\r\n          .map((note) => (\r\n            <Accordion>\r\n              <Card style={{ margin: 10 }} key={note._id}>\r\n                <Card.Header style={{ display: \"flex\" }}>\r\n                  <span\r\n                    // onClick={() => ModelShow(note)}\r\n                    style={{\r\n                      color: \"black\",\r\n                      textDecoration: \"none\",\r\n                      flex: 1,\r\n                      cursor: \"pointer\",\r\n                      alignSelf: \"center\",\r\n                      fontSize: 18,\r\n                    }}\r\n                  >\r\n                    <Accordion.Toggle\r\n                      as={Card.Text}\r\n                      variant=\"link\"\r\n                      eventKey=\"0\"\r\n                    >\r\n                      {note.title}\r\n                    </Accordion.Toggle>\r\n                  </span>\r\n\r\n                  <div>\r\n                    <Button href={`/note/${note._id}`}>Edit</Button>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"mx-2\"\r\n                      onClick={() => deleteHandler(note._id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </div>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body>\r\n                    <h4>\r\n                      <Badge variant=\"success\">\r\n                        Category - {note.category}\r\n                      </Badge>\r\n                    </h4>\r\n                    <blockquote className=\"blockquote mb-0\">\r\n                      <ReactMarkdown>{note.content}</ReactMarkdown>\r\n                      <footer className=\"blockquote-footer\">\r\n                        Created on{\" \"}\r\n                        <cite title=\"Source Title\">\r\n                          {note.createdAt.substring(0, 10)}\r\n                        </cite>\r\n                      </footer>\r\n                    </blockquote>\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n          ))}\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default MyNotes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteNoteAction, updateNoteAction } from \"../../actions/notesActions\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nfunction SingleNote({ match, history }) {\r\n  const [title, setTitle] = useState();\r\n  const [content, setContent] = useState();\r\n  const [category, setCategory] = useState();\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteUpdate = useSelector((state) => state.noteUpdate);\r\n  const { loading, error } = noteUpdate;\r\n\r\n  const noteDelete = useSelector((state) => state.noteDelete);\r\n  const { loading: loadingDelete, error: errorDelete } = noteDelete;\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure?\")) {\r\n      dispatch(deleteNoteAction(id));\r\n    }\r\n    history.push(\"/mynotes\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetching = async () => {\r\n      const { data } = await axios.get(`/api/notes/${match.params.id}`);\r\n\r\n      setTitle(data.title);\r\n      setContent(data.content);\r\n      setCategory(data.category);\r\n      setDate(data.updatedAt);\r\n    };\r\n\r\n    fetching();\r\n  }, [match.params.id, date]);\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setCategory(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  const updateHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateNoteAction(match.params.id, title, content, category));\r\n    if (!title || !content || !category) return;\r\n\r\n    resetHandler();\r\n    history.push(\"/mynotes\");\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"Edit Note\">\r\n      <Card>\r\n        <Card.Header>Edit your Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={updateHandler}>\r\n            {loadingDelete && <Loading />}\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            {errorDelete && (\r\n              <ErrorMessage variant=\"danger\">{errorDelete}</ErrorMessage>\r\n            )}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                placeholder=\"Enter the title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                placeholder=\"Enter the content\"\r\n                rows={4}\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                placeholder=\"Enter the Category\"\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Update Note\r\n            </Button>\r\n            <Button\r\n              className=\"mx-2\"\r\n              variant=\"danger\"\r\n              onClick={() => deleteHandler(match.params.id)}\r\n            >\r\n              Delete Note\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Updated on - {date.substring(0, 10)}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default SingleNote;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { login } from \"../../actions/userActions\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport \"./LoginScreen.css\";\r\n\r\nfunction LoginScreen({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/mynotes\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"LOGIN\">\r\n      <div className=\"loginContainer\">\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            New Customer ? <Link to=\"/register\">Register Here</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { register } from \"../../actions/userActions\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport \"./RegisterScreen.css\";\r\n\r\nfunction RegisterScreen({ history }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [pic, setPic] = useState(\r\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n  );\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [picMessage, setPicMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const postDetails = (pics) => {\r\n    if (\r\n      pics ===\r\n      \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n    ) {\r\n      return setPicMessage(\"Please Select an Image\");\r\n    }\r\n    setPicMessage(null);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"notezipper\");\r\n      data.append(\"cloud_name\", \"piyushproj\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage(\"Please Select an Image\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmpassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else dispatch(register(name, email, password, pic));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"REGISTER\">\r\n      <div className=\"loginContainer\">\r\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n        {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n        {loading && <Loading />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"name\"\r\n              value={name}\r\n              placeholder=\"Enter name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              value={email}\r\n              placeholder=\"Enter email\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"confirmPassword\">\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              value={confirmpassword}\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          {picMessage && (\r\n            <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n          )}\r\n          <Form.Group controlId=\"pic\">\r\n            <Form.Label>Profile Picture</Form.Label>\r\n            <Form.File\r\n              onChange={(e) => postDetails(e.target.files[0])}\r\n              id=\"custom-file\"\r\n              type=\"image/png\"\r\n              label=\"Upload Profile Picture\"\r\n              custom\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form>\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            Have an Account ? <Link to=\"/login\">Login</Link>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createNoteAction } from \"../../actions/notesActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nfunction CreateNote({ history }) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const noteCreate = useSelector((state) => state.noteCreate);\r\n  const { loading, error, note } = noteCreate;\r\n\r\n  console.log(note);\r\n\r\n  const resetHandler = () => {\r\n    setTitle(\"\");\r\n    setCategory(\"\");\r\n    setContent(\"\");\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createNoteAction(title, content, category));\r\n    if (!title || !content || !category) return;\r\n\r\n    resetHandler();\r\n    history.push(\"/mynotes\");\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <MainScreen title=\"Create a Note\">\r\n      <Card>\r\n        <Card.Header>Create a new Note</Card.Header>\r\n        <Card.Body>\r\n          <Form onSubmit={submitHandler}>\r\n            {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"title\"\r\n                value={title}\r\n                placeholder=\"Enter the title\"\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Content</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                value={content}\r\n                placeholder=\"Enter the content\"\r\n                rows={4}\r\n                onChange={(e) => setContent(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {content && (\r\n              <Card>\r\n                <Card.Header>Note Preview</Card.Header>\r\n                <Card.Body>\r\n                  <ReactMarkdown>{content}</ReactMarkdown>\r\n                </Card.Body>\r\n              </Card>\r\n            )}\r\n\r\n            <Form.Group controlId=\"content\">\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type=\"content\"\r\n                value={category}\r\n                placeholder=\"Enter the Category\"\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            {loading && <Loading size={50} />}\r\n            <Button type=\"submit\" variant=\"primary\">\r\n              Create Note\r\n            </Button>\r\n            <Button className=\"mx-2\" onClick={resetHandler} variant=\"danger\">\r\n              Reset Feilds\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <Card.Footer className=\"text-muted\">\r\n          Creating on - {new Date().toLocaleDateString()}\r\n        </Card.Footer>\r\n      </Card>\r\n    </MainScreen>\r\n  );\r\n}\r\n\r\nexport default CreateNote;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport \"./ProfileScreen.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateProfile } from \"../../actions/userActions\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [pic, setPic] = useState();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [picMessage, setPicMessage] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading, error, success } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/\");\r\n    } else {\r\n      setName(userInfo.name);\r\n      setEmail(userInfo.email);\r\n      setPic(userInfo.pic);\r\n    }\r\n  }, [history, userInfo]);\r\n\r\n  const postDetails = (pics) => {\r\n    setPicMessage(null);\r\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\r\n      const data = new FormData();\r\n      data.append(\"file\", pics);\r\n      data.append(\"upload_preset\", \"notezipper\");\r\n      data.append(\"cloud_name\", \"piyushproj\");\r\n      fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\r\n        method: \"post\",\r\n        body: data,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPic(data.url.toString());\r\n          console.log(pic);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      return setPicMessage(\"Please Select an Image\");\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateProfile({ name, email, password, pic }));\r\n  };\r\n\r\n  return (\r\n    <MainScreen title=\"EDIT PROFILE\">\r\n      <div>\r\n        <Row className=\"profileContainer\">\r\n          <Col md={6}>\r\n            <Form onSubmit={submitHandler}>\r\n              {loading && <Loading />}\r\n              {success && (\r\n                <ErrorMessage variant=\"success\">\r\n                  Updated Successfully\r\n                </ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>{\" \"}\r\n              {picMessage && (\r\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n              )}\r\n              <Form.Group controlId=\"pic\">\r\n                <Form.Label>Change Profile Picture</Form.Label>\r\n                <Form.File\r\n                  onChange={(e) => postDetails(e.target.files[0])}\r\n                  id=\"custom-file\"\r\n                  type=\"image/png\"\r\n                  label=\"Upload Profile Picture\"\r\n                  custom\r\n                />\r\n              </Form.Group>\r\n              <Button type=\"submit\" varient=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <img src={pic} alt={name} className=\"profilePic\" />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </MainScreen>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport LandingPage from \"./screens/LandingPage/LandingPage\";\r\nimport MyNotes from \"./screens/MyNotes/MyNotes\";\r\nimport SingleNote from \"./screens/SingleNote/SingleNote\";\r\nimport LoginScreen from \"./screens/LoginScreen/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen/RegisterScreen\";\r\nimport CreateNote from \"./screens/SingleNote/CreateNote\";\r\nimport { useState } from \"react\";\r\nimport ProfileScreen from \"./screens/ProfileScreen/ProfileScreen\";\r\n\r\nfunction App() {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  return (\r\n    <Router>\r\n      <Header setSearch={(s) => setSearch(s)} />\r\n      <main className=\"App\">\r\n        <Route path=\"/\" component={LandingPage} exact />\r\n        <Route path=\"/login\" component={LoginScreen} />\r\n        <Route path=\"/register\" component={RegisterScreen} />\r\n        <Route\r\n          path=\"/mynotes\"\r\n          component={({ history }) => (\r\n            <MyNotes search={search} history={history} />\r\n          )}\r\n        />\r\n        <Route path=\"/note/:id\" component={SingleNote} />\r\n        <Route path=\"/createnote\" component={CreateNote} />;\r\n        <Route path=\"/profile\" component={ProfileScreen} />\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\n\r\n//kind of middleware -->thunk\r\n\r\nimport thunk from \"redux-thunk\";\r\n//download same extension in chrome as well\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  noteCreateReducer,\r\n  noteDeleteReducer,\r\n  noteListReducer,\r\n  noteUpdateReducer,\r\n} from \"./reducers/notesReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/userReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  noteList: noteListReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  noteCreate: noteCreateReducer,\r\n  noteDelete: noteDeleteReducer,\r\n  noteUpdate: noteUpdateReducer,\r\n  userUpdate: userUpdateReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\n//createStore is now deprecated you can use configureStore instead\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  NOTES_UPDATE_REQUEST,\r\n  NOTES_UPDATE_SUCCESS,\r\n  NOTES_UPDATE_FAIL,\r\n  NOTES_CREATE_FAIL,\r\n  NOTES_CREATE_REQUEST,\r\n  NOTES_CREATE_SUCCESS,\r\n  NOTES_DELETE_FAIL,\r\n  NOTES_DELETE_REQUEST,\r\n  NOTES_DELETE_SUCCESS,\r\n  NOTES_LIST_FAIL,\r\n  NOTES_LIST_REQUEST,\r\n  NOTES_LIST_SUCCESS,\r\n} from \"../constants/notesConstants\";\r\n\r\nexport const noteListReducer = (state = { notes: [] }, action) => {\r\n  switch (action.type) {\r\n    case NOTES_LIST_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_LIST_SUCCESS:\r\n      return { loading: false, notes: action.payload };\r\n    case NOTES_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_CREATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_DELETE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const noteUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case NOTES_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case NOTES_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case NOTES_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, userInfo: action.payload, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload, success: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport \"./bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}